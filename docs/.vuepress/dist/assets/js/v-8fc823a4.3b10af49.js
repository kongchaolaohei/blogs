"use strict";(self.webpackChunkvuepress_test=self.webpackChunkvuepress_test||[]).push([[590],{3177:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-8fc823a4",path:"/solution/other/%E7%AE%80%E5%8D%95%E7%9A%84websocket%E5%B7%A5%E5%85%B7.html",title:"简单的websocket工具",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"使用方法",slug:"使用方法",children:[]}],filePathRelative:"solution/other/简单的websocket工具.md",git:{updatedTime:1630054947e3,contributors:[{name:"kongchaolaohei",email:"kongchaolaohei@xxx.com",commits:1}]}}},2216:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var e=a(6252);const p=(0,e._)("h1",{id:"简单的websocket工具",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#简单的websocket工具","aria-hidden":"true"},"#"),(0,e.Uk)(" 简单的websocket工具")],-1),o=(0,e.Uk)("我在"),t={href:"https://vueuse.org",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("vueuse"),l=(0,e.Uk)("中发现了一个比较简单好用的"),c={href:"https://vueuse.org/core/useWebSocket/",target:"_blank",rel:"noopener noreferrer"},b=(0,e.Uk)("websocket工具函数"),u=(0,e.Uk)(",可以快速的在不太复杂的websocket的场景中使用."),k=(0,e.uE)('<h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useWebSocket <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> status<span class="token punctuation">,</span> data<span class="token punctuation">,</span> send<span class="token punctuation">,</span> open<span class="token punctuation">,</span> close <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useWebSocket</span><span class="token punctuation">(</span><span class="token string">&#39;ws://websocketurl&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>可以通过皆苦描述来看看他怎么使用</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">WebSocketStatus</span> <span class="token operator">=</span> <span class="token string">&quot;OPEN&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;CONNECTING&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;CLOSED&quot;</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">WebSocketOptions</span> <span class="token punctuation">{</span>\n  <span class="token comment">// websocket连接后又的回调</span>\n  onConnected<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>ws<span class="token operator">:</span> WebSocket<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token comment">// websocket断开连接后的回调</span>\n  onDisconnected<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>ws<span class="token operator">:</span> WebSocket<span class="token punctuation">,</span> event<span class="token operator">:</span> CloseEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token comment">// 产生错误后的回调</span>\n  onError<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>ws<span class="token operator">:</span> WebSocket<span class="token punctuation">,</span> event<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token comment">// 接收到信息时的回调</span>\n  onMessage<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>ws<span class="token operator">:</span> WebSocket<span class="token punctuation">,</span> event<span class="token operator">:</span> MessageEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token doc-comment comment">/**\n   * 是否启用心跳连接\n   *\n   * <span class="token keyword">@default</span> false\n   */</span>\n  heartbeat<span class="token operator">?</span><span class="token operator">:</span>\n    <span class="token operator">|</span> <span class="token builtin">boolean</span>\n    <span class="token operator">|</span> <span class="token punctuation">{</span>\n        <span class="token doc-comment comment">/**\n         * 设置心跳连接时要发送的内容\n         *\n         * <span class="token keyword">@default</span> &#39;ping&#39;\n         */</span>\n        message<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n        <span class="token doc-comment comment">/**\n         * 设置每隔xx秒发送一次心跳连接\n         *\n         * <span class="token keyword">@default</span> 1000\n         */</span>\n        interval<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>\n      <span class="token punctuation">}</span>\n  <span class="token doc-comment comment">/**\n   * 是否启用自动重连\n   *\n   * <span class="token keyword">@default</span> false\n   */</span>\n  autoReconnect<span class="token operator">?</span><span class="token operator">:</span>\n    <span class="token operator">|</span> <span class="token builtin">boolean</span>\n    <span class="token operator">|</span> <span class="token punctuation">{</span>\n        <span class="token doc-comment comment">/**\n         * 设置最大重连次数\n         *\n         * <span class="token keyword">@default</span> -1\n         */</span>\n        retries<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>\n        <span class="token doc-comment comment">/**\n         * 设置每次重连的间隔时间\n         *\n         * <span class="token keyword">@default</span> 1000\n         */</span>\n        delay<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>\n        <span class="token doc-comment comment">/**\n         * 设置达到最大重连次数之后的回调函数\n         */</span>\n        onFailed<span class="token operator">?</span><span class="token operator">:</span> Fn\n      <span class="token punctuation">}</span>\n  <span class="token doc-comment comment">/**\n   * 是否启用自动连接\n   *\n   * <span class="token keyword">@default</span> true\n   */</span>\n  immediate<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">WebSocketResult<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>\n  <span class="token doc-comment comment">/**\n   * 获取websocket返回的结果的引用,可以监听他的变化\n   */</span>\n  data<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span>\n  <span class="token doc-comment comment">/**\n   * 获取websocket的连接状态\n   * &#39;OPEN&#39;, &#39;CONNECTING&#39;, &#39;CLOSED&#39;\n   */</span>\n  status<span class="token operator">:</span> Ref<span class="token operator">&lt;</span>WebSocketStatus<span class="token operator">&gt;</span>\n  <span class="token doc-comment comment">/**\n   * 关闭websocket连接\n   */</span>\n  close<span class="token operator">:</span> WebSocket<span class="token punctuation">[</span><span class="token string">&quot;close&quot;</span><span class="token punctuation">]</span>\n  <span class="token doc-comment comment">/**\n   * 重新打开一个新链接\n   * 如果当前连接是活动的,则关闭当前活动的连接,打开一个新的连接\n   */</span>\n  open<span class="token operator">:</span> Fn\n  <span class="token doc-comment comment">/**\n   * 通过websocket连接发送信息\n   *\n   * <span class="token keyword">@param</span> <span class="token parameter">data</span>\n   * <span class="token keyword">@param</span> <span class="token parameter">useBuffer</span> 当套接字还没有打开时，将数据存储到缓冲区中并发送一个连接的数据。默认为true(不太明白是什么意思)\n   */</span>\n  <span class="token function-variable function">send</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> ArrayBuffer <span class="token operator">|</span> Blob<span class="token punctuation">,</span> useBuffer<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>\n  <span class="token doc-comment comment">/**\n   * 返回一个websocket的引用\n   */</span>\n  ws<span class="token operator">:</span> Ref<span class="token operator">&lt;</span>WebSocket <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * websocket的参数说明\n *\n * <span class="token keyword">@see</span> /useWebSocket\n * <span class="token keyword">@param</span> <span class="token parameter">url</span>\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useWebSocket</span><span class="token generic class-name"><span class="token operator">&lt;</span>Data <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n  url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> WebSocketOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> WebSocketResult<span class="token operator">&lt;</span>Data<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br></div></div>',4),i={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,(0,e._)("p",null,[o,(0,e._)("a",t,[r,(0,e.Wm)(a)]),l,(0,e._)("a",c,[b,(0,e.Wm)(a)]),u]),k],64)}}}}]);